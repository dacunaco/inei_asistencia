var app = angular.module('adminApp', ['ngAnimate',
    'ngCookies',
    'ngResource',
    'ngRoute',
    'ngSanitize',
    'ngTouch',
    'ngProgress',
    'ng-breadcrumbs',
    'ui.bootstrap',
    'timer']);

app.config(['$routeProvider', function ($routeProvider) {
    $routeProvider
            .when('/home', {
                templateUrl: 'views/index.html',
                controller: '',
                title: 'Principal',
                label: 'Principal'
            })
            .otherwise({
                redirectTo: '/home'
            });
}]);
app.run(['$rootScope', 'ngProgress', '$location', 'breadcrumbs', '$timeout', '$templateCache', 'auxiliar', '$window', '$http', function ($rootScope, ngProgress, $location, breadcrumbs, $timeout, $templateCache, auxiliar, $window, $http) {
    $rootScope.breadcrumbs = breadcrumbs;

    $rootScope.$on('$routeChangeStart', function (event, next, current) {
        if (typeof (current) !== 'undefined') {
            $templateCache.remove(current.templateUrl);
        }
        ngProgress.start();
    });

    $rootScope.$on('$routeChangeSuccess', function (event, current, previous) {
        ngProgress.complete();
        if (current.hasOwnProperty('$$route')) {
            $rootScope.title = current.$$route.title;
        }
    });
}]);
app.directive('numbersOnly', function () {
    return {
     require: 'ngModel',
     link: function(scope, element, attrs, modelCtrl) {
       modelCtrl.$parsers.push(function (inputValue) {
           if (inputValue == undefined) return '' 
           var transformedInput = inputValue.replace(/[^0-9.]/g, ''); 
           if (transformedInput!=inputValue) {
              modelCtrl.$setViewValue(transformedInput);
              modelCtrl.$render();
           }         

           return transformedInput;         
       });
     }
   };
});

app.directive('ngEnter', function () {
    return function (scope, element, attrs) {
        element.bind("keydown keypress", function (event) {
            if(event.which === 13) {
                scope.$apply(function (){
                    scope.$eval(attrs.ngEnter);
                });

                event.preventDefault();
            }
        });
    };
});
app.factory('auxiliar', ['$modal', function ($modal) {
	var servicio = {
    objRemitente : {dni : '', nombres: ''},
    objConsignatario : {dni : '', nombres : ''},
    message : function (message, callback, button) {
      var modalInstance = $modal.open({
        templateUrl: 'views/partials/message.html',
        controller: 'messageController',
        resolve: {
          message: function () {
            return message; 
          },
          callback : function(){
            return callback;
          },
          button: function(){
            return button;
          }
        }
      });
    },
    modalTemplate : function (title, template, controller, size) {
      var modalInstance = $modal.open({
        templateUrl: template,
        controller: controller,
        size: size,
        resolve: {
          title: function () {
            return title; 
          }
        }
      });
    }
  };

  return servicio;
}]);
app.filter('num', function() {
    return function(input) {
      return parseInt(input, 10);
    }
});
var login = angular.module('loginApp', ['ngAnimate', 'ngMaterial'])
  .controller('loginController', ['$http', '$scope', 'authFactory', '$window', '$timeout', '$location', '$mdSidenav', '$mdDialog', function ($http, $scope, authFactory, $window, $timeout, $location, $mdSidenav, $mdDialog) {
    $scope.toggleSidenav = function(menuId) {
        $mdSidenav(menuId).toggle();
    };

    $scope.mostrarAlerta = function(mensaje) {
      alert = $mdDialog.alert()
        .title('Mensaje del Sistema')
        .content(mensaje)
        .ok('Cerrar');

      $mdDialog
          .show( alert )
          .finally(function() {
            alert = undefined;
          });
    }

    $scope.login = function(user){
    	$scope.mostrarAlerta('Validando datos...');
        $timeout(function() {
        	authFactory.login(user).then(function(res){
                console.log(res);
                if(res.data.rep == 1){
                    $scope.mostrarAlerta('Datos correctos. Redireccionando...');
                    $timeout(function() {
                        $window.location.reload();
                      }, 1000);
                }else if(res.data.rep == 0){
                    $timeout(function() {
                        $scope.mostrarAlerta(res.data.msg);
                      }, 10);
                    
                }
	        });
        }, 1000);
    };
  }])
  .factory("authFactory", ['$http', '$q', function ($http, $q){
	return {
		login: function(user)
		{
			var deferred;
            deferred = $q.defer();
            $http({
                method: 'POST',
                url: 'usuario/iniciar_sesion',
                data: "username=" + user.username + "&password=" + user.password,
                headers: {'Content-Type': 'application/x-www-form-urlencoded'}
            })
            .then(function(res){
                deferred.resolve(res);
            })
            .then(function(error){
                deferred.reject(error);
            });

            return deferred.promise;
		}
	}
  }]);